/*
 * from: Coding with John (https://www.youtube.com/c/CodingwithJohn)
 *       LetCode Longest Substring Java Solution - FAST Sliding Window Algorithm
 *       https://www.youtube.com/watch?v=GS9TyovoU4c
 * -----------------------------------------------------------------------------
 * V2
 * Hashmap solution time complexity falls from quadratic (inner loops) to linear!
 * better!
 * ---
 */

import java.util.*;

public class Solution_v2 {

	public static void main(String[] args) {

		// String s = "abcabcd";
		String s = "aacbccabcccaaaadbaacdbbaacdbcccbccbadadcacadbabdbdddcccbcbabbabdccbbbabdaabcbbcbbbcbaddccdbddacdbccbadabbaccbadcdcdadaacdbbcccdaacdabbddcdcdbcdbdbbcaacbabdbcbcacdccdaddabacabbabbbbcaababbbbdddadbdcddcaaaacabacdabcddadbcccccaaaccdcbcabbdcbddacaddcadaacaacbccccdbbbcdbddaaacccacbcaabbcabacbbddcbcabbcdcaaacccacabcbdcaaadadcbdccdacddbbcadacadabdcadddcacaabaccabcdcacdddadcccabaacbbddbcadacbbcdddddcaccbbaaababcddcaacacdbbdacabacbaabccdbacabacaadcacddaadbdbabbccaadadadacbdbcbbbbbbcbdabcdaabcaabbaccbacbabdabaadabbcbcabacbcccaabaaabbdabdaccabddbbdcbbbababcaccdadccdabdcddbaddbddcadacabdcaabbacbddabdacabddcadaabbccdcdcdabcabcadddbddcbdbddaaadabccababadbdadcbdcaaddacbcacaadbbcbbdccabbdcbccdaacbdbcbcaaccabbddcacccdbbccdbddbacabcabdcbdbdbaccdbcacccbbabaacddabddcbdbdabbbcadccbdaadbccdcdbbadcadbacbcacbaddaabcaaccbbadcbcabdbccadcabcddbcccdbadccbcabcdabddbabddaadbbbbbbdcadabaddbcddbacaabcadaaadabacaadcddbaabbaadcbbddacdddbdcdcadddcabcddabbdcdadbbdbdabdacbbccbcdabddbadaaabcacacaadcabdbbacdcbadbdbacadbcbcdcaaabdadcaddcacaaabbacbdcbdaacdacbdccadbbdcaccdadadaddbacbccababbdcaabdbcbadbdaadbaddbcaccccacdcbcbcdcbaabbbdbdccaacadddbbbcabdcddcccdbbbcabccdcaaabcadbbccbdbcaacddddbdbaadccbddbdcccdbdbacacddbbcdabddaccdbbdcacbdccaddddcbcadddbcadcdcdaabcadbcddcccadbcacbadddaccbddbadcbaaaddabacbbaaaccdbbdcadaadcddbbdbaccbaabcbcadbadcdcbdbbcdacabcdcdccaaaabacccbbadcbbbbacbabcdbaadbdbdacbdaabdacbadaaccdabdbcaabbbabadcacbdabdcbcddaaacccdbbadddcdaacdddcddbccaaabcbddcaaacaddbbcadddbacdccbbddccadadaddddbcbbccbaabcaadbadcdabbadbbddccaacbbbcbdadddbdaddcacbccccaacbdcdcaaddabaacadddccddddacccadbccabcbadadcccaccddadbdbbbcaabacaabbbaabcbbadabcaacacbbbabacddbbbbbaccbbcbcdbcdcbbcbbdddcdcaddaabcdbcadaacdcdcabaddcccbccadbddacaddbbbcadabdbcbcadcabcbaaababbdcdaaccabdaccaccaabcdabaccaddadcbbdabcadcdcaddccaabadadbabaadabbbadbcbdcdadbddaccaaaccdcdbdabdccbcaaddccddcbaacddcbaddaddbcbddbbbddbdcdbbaaadcaddacdaccccabbdcaddaadbaabbccdaacdababbabddbdadabaddddaadbdbccaddbbdbdcaaddcdbddccbddaadbddbcbbbabcabaabdadacdbabcabadccdabbbdabbcbccccccaadbabdababbadbabddcacadbddcdbbcbaabbccdbbccababaadcaadcabacaadbaccbbddbcbdbdadbcdabbbabcacdbbabacdbdacdcacdbccadaaabcadccdbdaaabdacddccaadbaadbbbdbdbcbcadddacdadaadbddabdaaccabcddbddddadbcccdcdcaaabdacccbbbcabbbcdccadbcdcdbdabcdbbbddaccdbaacbabbccbacdacddcabbdaababadddcacabcaacbdadbabbadacbdcdbccdcdcabacddbdaacbbcdbdbcaacdccdccdbbcdaacdbaaadcaabdbddcbcacacdacdbdaacaadbdcdadacdcbdaabdbdbbcabbacdacbbddbadabcdabcbbcbcbcdcdbacbbaadbbdbbacdbbbdcccdcbbbacdabbbddbdccdbddabbabcabdacdbbbbdbcadcabbacbbcbbbbdbdbbbadbdacaabaadbbdbcaacbbcadcbbbcadaaadcbcaddcdbcaacccaaacadddbaabcdacbaccdacbadbadccbdaaddcdbbcbbbddcdbcdabdbcabacababdcdcddcddcbdbcdbdccaccdaccdbdddcaccbabdaccddabcaacbccdbaacdccbbbcddabbddcdaccbacababdbdbccdbbcdcacbbadbddccbcdccccdcbabdcaaddbcdcccaccacdbbadaddbbcddbdcbaabaabdbcccbaacbbcdddacaadbcccdccdcddddbbbdcccdbdddddbbcdcdcacdaccbadcacbcbdcaccdadcdcaacccddcbcabdbdcaabbdccbbbcbbaaadaabbacddabdbcccbdcabdcddabacaabcadcbbacaadabcaddccbcabacbdadcdabdbcabdbcaddbbabdcadacddbabdaaabcabcdcababcddccbccacacbbbdaddbbdbadbcdbbcacaaabaaadaddbcacdddbcbdcbaadadacbcbcbbaccbacaadccaacccddacaaaadcccbdbadccdbaccbcadbdcbcadccbdddbacaacdbacddbdbcdaddadaabbddbbdabacbdcbbbacbbddbdbbadcbdbdbacacddbbcdcaaddcdbabcabdbdabbcbcbcccabcccacbbbcdccdbacddaaddadbacaadcccbcaabbcaaddadbbcddcbcaccadaabddccaddbacacccacbccdcbcacdacbdadbcccbacbacccdaddadcaabddbddadcacddabbacbabaddaadcabcacdcdcadbcdcbcdccbadbdccdbbcbcdbcaabdaaabdbbdaddddddccabacbbdcddabcdcbbcdcababcbcbbdbcbabbcbdabaccaaacdddaccccacabbabbdacaaaacdadddccbbdacabaadaaadcacaddaabbaabcadcbadabaaccaacacbdadcdbadbcdacbccdacbcadacbcabdbbbcbcabdbdabddbabdaddbadaaddcddddbaacdccddabddccbcdbdbabacacbdaadcbddcacbcddcaaadacbccadbbacadbbdccdddddddacacbdcbcaacaaabacaacbbbadacdcbacadbabcdadcababbcabbabaccdbdcdacccdabadcbdbcbabbabadaaacbbdddbaaadbdddcaaabccccabdbbbdbabacbdbacadbabaaadabddbcdbacbccbcabcbccbccbdddbdaaccbcaababdddbdadddaddacbcddabdcbccadabbabbbdcbadadbbbddaacccabcdabdcadcadcdbbcdcbbcaddcddbadccdaddadcbbbdbbaacacddabacbcdabbbcabcdcbbaabcaacdccbabdcaaaaccbdbdabdcdddbbdcdabcacacbdadaddabbbaaddcbaabbbcdcacdbcdabdccbbccbacdcaabbbddccabbbdddaaacdbacbaccccbcadcbbdcbcaaacdabddcccdcdbbddcababbabbcdccddbcccabdbdcadadddcadabbbdabbccabddbabaacaddbbccabdccdccdacddabaacaccacdacacabacdbbcabccdccaadaacdbccacababdbdcbcadbaaabbacbbadcdabbbddcaaacdcaacdcbaadabddbbadaccbdbdcdbdddcabbaccaadcacbbdaddbadddbcbaaddcbdcdbbbcaaabcbddcadccdbddcdcbddaaaadadbbaaabbdadbdbadcbcdccdbaaaccdcdcdcaacabaaddbbacaacdcbabadbcadbdcbcacabdbcbccaabaabdddadcbddacccbcdcbbcacdbbdcdabaaddbdcddbbccdbaadcaaddbcbacbcacbdacaabbadbcabbcaadabdbbcbaadadaddbcbaabdbbaadddbccacdabbdcbbaacadcdaccbdbbaaaabdbcdddbddaccbbbcdbccccbdcdccdcaccdbbbabaccbdcbccbcabacddadbaadddcacddcdbddbdadcacacaaacaabdbcaccacacadcacaadccbcdcdadbbacabdacabcdcbbcdacbabbdbacdcdabbbaaacbdaababaaccbbbcabddaddcddabcddbcdadcdccabdcaabdadbbadacaabccbaabdaacbaacdbccddcabbccbcabcbadcdacbddacabaddabcdadbdddacdcaaabcabaaabbdaabdcbccdcadcccdccaccbdadbcdcdacaddcdaadbacbdcabcdbbbdccaaaaadbabbcbcbdddacbacbdacdcdacbadbbababddcbbbddbdddabdbdacccdadbbccbabbaccabcdccdacdbbbcdcdcabcdaadbcbcccbdcdaabcbddaadabbddccacddcbababbdcdccaabbaadabadaacdbcdaaccccddacdadabadbbabddcdcddcbdcbcbaccbaadccdbbcdaaaccaccadcbdadddddbbcaccdacadabdabcdddadcbacdcdbddadbacdcbdddabbaaabbdccccbcbbcccaaddaabbdabbdbabacdacbdabacbbddbcdddcbaacbdcabccbbbbbcbbcbcdaabbdbcbbccbccbbccdbdbbccccdbdabdcdcabcbaacbdcadbdcbadbdbdcdcdaccadaaccccbbddccdcabcdbdaacdbacbcabcbccdbcbdccdcbccbbbcbcbbacbabbadabbdacadbabadcaaaaddddaaccacadabbcdbbbcdccccbcdbddbbbdabdccddabdcbcdbdbdcbaaababbacbdccdcadabacaabcdaabdcbdabdacdabcacabcacaccadbbddaaaddaaacacdadadcaddbcacddbbccbcdaddacadbbdcdaaddabaaacbadbdbdbccaaccccbcdddbaaacdbbcccadbdabcdcbbbcdcdcdadcbababbddaadadcbdddccbaababacbdbbcccaaaaadbdaacdaddccabdcaccddacbcbccbaaaabcabdbcbbccdbcddbbdadbadabcaabdccdccbdbbddbdbbaccdbaabdbcdcadbcabccdccbadadbcbbcbbbabaccadaabdddcdbdaacdcbccbbadccddcaabcadbdaaabbbdcadbddabdddadabaaabaaacabcdcbcaddcdaccacacccccdbabddbcacadbbaadbbacddccaadbcacdbcbcabcccdaccbbcaaadcdbbbdbbaddbbbcbaaaaabdadadadbdcbcccadbccdddbddacbbcbcbdbcbdddbadbcbadcdaddaabdadccddccddddacaabdbcdcaaddaabbdcbadccdabdabdcdababdcaaaabdddbcdabdbbbddbdcabdbcdbadacbaacabdbacaddacdbddacbabdacbcaadbabcabaacadcbdcacabcbbbbbddcbbbaaddabbccddddbccadabdbddbdbbdccbddbdabbbcbdacbbbcddbdbbbaccadbbcaddbcdabcbccdbdadaacdbcbddddadbadaacdccbddbaaddbacacacdcdaccdbccdccdbbbdabddddbbccdcadcbdacacbaaacccaacbccdbaadddcacbcdbdaacadabdbbdcadaabcdccddddcbacdddaaacbbcabdccbbcacbadaadcbccbddbdaabaadadbadcbdcbcabddccbdaabaabcdaabdaabccccdbddaaddcdbbcbbadaadaccacbdcacbcadcddacdcdcbdcccdbdcbaccdcaadbadcaddccddcadaacdbcccacdababccaabcbcbdbaddbcdbddccacaacbdbdacbadabdadacaadcaabcdbbbbccadacabdcdadaaadccaacacdbbbbbbcbcabaccbcabcabbcbadccbbbaacbdcaababadbbddcbcaacddcddadccdbcbdcaaadddcadadcbabadbddcbadbaabcdbccbccccdbcadcccdaacdabbddabccddcdbbdadaacacddccbaccdcddcddaddbbcdcdbbbcbcbdcbcbaabcdbbcdabbcbdcdacbbabcbabddacdbbadaaadddbcccbabacdadadabdcdabcaadccdbacaabdaccbdcadbcabbdabcbcbacdcccdcacdcdbabaabaccccdbbaacdabbbcbacbdddacacbddabdcabaaabdaccbacbcdbcdcbbbbaadbbcdccbaadccbccaaaddddbccbaadbcdcdaddabdababcabbdcdadbbbcdddcccaaddabcbdcddcdaadcacccabbcbbabadcdaaccaccdbcbaaaaadddaaaddbbbccdcbcabdcaabbdccaccdbaccdbbccbbdcdcbabbbacbcdbbaadaaabbabdcaabadaacbbbaadaadbdcccbddbbbdcddbbbadddcddccadbccdbbaccbcdccabbcadcddabacdbcabcccaadabbdddabacbbbbdbaadadbbbabacdbcbddbdacbaddbbaaaddcdcbbccadbdaaadaaacabdcaacdbcbacbadabaaacddddabadccaadacaaaaccddcbbdcdbadaaaacddddccddbcbdcdcaddbcdddcbdcdcabccbbcbacadcbaaccdbbcbdaabcbbddccdccaccdcdbaaaddbdacacdbbbadcdbdcbccbbcddcbcbddcbcbcabacadcdbccaccddabacbcbbaccdbccdcbcabddbbdbbbddcbdcabbdcccacaaabbbacdcdcbcdabddccdbbabacaddacaaddbccdadccaacbbdcadcabaccdabdcccaaadcdcbdbadbabbbccdadbddadbbddbaddbbabaddaaaccbbdcabddbaabdaacbdddaadacbaacdcaccdbabbdcdabbaababdbcbdabcdddabcbcabbdacaadabdacbaadbcbcaadacababdcdddccdddabccaccbdcbbadcaacabadbaddadabababadaaccacaddbdbbbcdcbaccacbddcccccdccbbcbaccdcbbababbbccabdbabccacddbbdccddbaccccbdaccbcdccbcbbcbaadaabdcbcaadddcbbbcccdcdabddcdbbdabccddccaababbccccdacdbbdbdaaababcdddadcbadcbbadbbaccddddabbabbaaabbaddddbddcabbbcbcadbcbdbbaddaacadcbcaadcacdcbbbbdbcbababadabbbacadbacacbacdbdccbdcbcddaaddddcdacdcccaccdbbccbbcdbbadbdcbaacbcbcacacddbcadaaadcbaccdbccabbbbadbbdaacdadccbadddbbdacdbacaaaabcadcabadbbdaaaabdcaabdccdbccbbdddddadaadabccccccdbbcdcdaccadddddbadbcabadbcccbddadcacdadbaaacbdaaddbccdbccdacbaabbcddaabddddcbbbbbabdddbcdbbcabcadbaddadccabbccbacdadbadcbcbbdddbbcaabccbaccaddddcabdbbaccdadbbbacdbcaadacbabddbcdacdabcaddacdaadadadbabbacbaadbabbdddbaabbcbaadaddbadacaddacabcddccccaaabdbccbbaddbdbaacdbbdbdaddcdbadbaabcccbabadadcaabbddbddabbccdcddcddbccddbbcbbbabccdadbccbccabaadbcdbbcbbbbadaddbbcccdcdccadbaccdcdaacdaddcdcdccddadbdababddddabbbbadadbcbcccddabcaabbbbbcbdaacdcdbbccbaaddcdbbccabbdbbcaabdabccadbdbcdbadcdabcddabbbdbcdcbcbdcbbcbcccbcbababbddaddababbcabddcadbdabcdbaadcbaaccbdcaccdddbcbabaccccadaaabcbbaccccbdbcadbadccdcacdaddadcadccdabccacbacdaccabaccbaaabbadbabbccdabaaadaddbcbcabddbccacddbbdaaaabdacdacaabccdbaadadbdcdbcbaaabddcccbbbcaaacbdaaadbdadddadbacbbbdbcdbcdabcbacdccacaccbabdcaabcdbddbccbaabbaadcbbbcadbdaadcdacacbadcdabdbbbadbdabbabccdcbbaadabdbcbcdbadbabbdabacddaccacdbabbabddccbabadbbcbaacbbccbcbbbdaddbbdccdcbddadbbddcccbadcdcdaabcddaaccdcbcbacbaccbaccbacabaccaccadacadaddbbddcacadddadadbadcbacacbccddccabdcaccbbabcbdbdcbbdacccdbbcabacbbcdddbacbadabacdbaadcaadacbdbccbcddcabaccdbcaaaddbcbdcaddbcdaabcbbbbdbdcadadaddcaccadbdcbdaacdbbddbabdbdbbbabadbadddbadabbadaacbcdbbabbbdbdacacbcadbacbabbdbbbbbadbcccbbdbdcaadaccadbbbdcadccaccdbcddcadaadadcdbbacdadadaddabcbbbdcdcccbdcdabdbbbabbdcdbcaddaabbcbbbcdadbdcdddabcbaddadaddddbacbbdcbddcdbdbacbcbddbcdadcdcdbbbdbdabbadbbdadbdcddcabdcdabdbabadaabdbabdcdddadacddacadccaaabdaddbdbbadcbcbbcababdabdbcbdbcabcccccacdcccdabccbacbadbaaaabacdaddbbbcddddabaabcababbcbdacaabdbcddadacbbdbaaaddcabcdcaadaaacbbcabbdccadccbbcbaabbabdbcbddaaadaccbcdbdacdaaaabdacabdbbcbdbbdacdacbdcdaaadcdcdcadbcdbccdbaaaabcccbaddcdcaaacdbdaaaadcaadbdabbbccbaabdaababacdddccbbdbcdacbdbdbdbccd";
		System.out.println("String s: aacbccabcccaaaadbaacdbbaacdbcccbc ... (9999 chars)");
		System.out.printf("Lognest substring length: %d\n", lengthOfLogestSubstring(s));

	} // end main

	public static int lengthOfLogestSubstring(String s) {

		int maxLength = 0;
		Map<Character, Integer> visitedCharacters = new HashMap<>();
		for (int right = 0, left = 0; right < s.length(); right++) {
			char currentCharacter = s.charAt(right);
			if (visitedCharacters.containsKey(currentCharacter) &&       // test if char in map
					visitedCharacters.get(currentCharacter) >= left) {   // test if char in substring
				left = visitedCharacters.get(currentCharacter) + 1;      // move pointer one past index of visited character
			}
				maxLength = Math.max(maxLength, right - left + 1);
				visitedCharacters.put(currentCharacter, right);          // put char and its position in map
		}
		return maxLength;
	}
}

